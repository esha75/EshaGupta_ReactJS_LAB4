{"ast":null,"code":"import { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowData() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"This is our Show Data Component.\"\n  }, void 0, false);\n}\n_c = ShowData;\nexport default ShowData;\n\n// import { useEffect, useState } from \"react\";\n// import { getDataFromServer } from \"../services/menu\";\n// import ExpenseTracker from \"./ExpenseTracker\";\n\n// function ShowData() {\n//   const [items, setItems] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [sum, setSum] = useState();\n//   const [rahulspent, setRahulspent] = useState(0);\n//   const [rameshspent, setRameshspent] = useState(0);\n//   const [showform, setShowForm] = useState(false);\n\n//   var rahulspent1 = 0;\n//   var rameshspent1 = 0;\n\n//   useEffect(() => {\n//     const fetchMenu = async () => {\n//       try {\n//         const data = await getDataFromServer();\n//         setItems(data);\n//         setSum(data.reduce((result, v) => (result = result + v.price), 0));\n//         Shares(data);\n//       } catch (error) {\n//         setError(error);\n//       }\n//     };\n//     fetchMenu();\n//   }, [showform]);\n\n//   const Shares = (data) => {\n//     data.map((sams) =>\n//       sams.payeeName === \"Rahul\"\n//         ? (rahulspent1 = rahulspent1 + sams.price)\n//         : (rameshspent1 = rameshspent1 + sams.price)\n//     );\n//     setRahulspent(rahulspent1);\n//     setRameshspent(rameshspent1);\n//   };\n\n//   const success = () => {\n//     setShowForm(false);\n//   };\n//   const cancel = () => {\n//     setShowForm(false);\n//   };\n\n//   return (\n//     <>\n//       <header id=\"page-Header\">Expense Tracker</header>\n//       <button id=\"Add-Button\" onClick={() => setShowForm(true)}>\n//         Add\n//       </button>\n//       {showform && (\n//         <div className=\"form\">\n//           <ExpenseTracker onTrue={success} onClose={cancel} />\n//         </div>\n//       )}\n//       <>\n//         <div className=\"use-inline date header-color\">Date</div>\n//         <div className=\"use-inline header-color\">Product Purchased</div>\n//         <div className=\"use-inline price header-color\">Price</div>\n//         <div className=\"use-inline header-color\" style={{ width: 112 }}>\n//           Payee\n//         </div>\n//       </>\n//       {items &&\n//         items.map((user, idx) => (\n//           <div key={idx}>\n//             <div className=\"use-inline date\">{user.setDate}</div>\n//             <div className=\"use-inline\">{user.product}</div>\n//             <div className=\"use-inline price\">{user.price}</div>\n//             <div className={`use-inline ${user.payeeName}`}>\n//               {user.payeeName}\n//             </div>\n//           </div>\n//         ))}\n//       <hr />\n//       <div className=\"use-inline \">Total: </div>\n//       <span className=\"use-inline total\">{sum}</span> <br />\n//       <div className=\"use-inline \">Rahul paid: </div>\n//       <span className=\"use-inline total Rahul\">{rahulspent}</span> <br />\n//       <div className=\"use-inline \">Ramesh paid: </div>\n//       <span className=\"use-inline total Ramesh\">{rameshspent.toFixed(2)}</span> <br />\n//       <span className=\"use-inline payable\">\n//         {rahulspent > rameshspent ? \"Pay Rahul \" : \"Pay Ramesh\"}\n//       </span>\n//       <span className=\"use-inline payable price\">\n//         {\" \"}\n//         {Math.abs((rahulspent - rameshspent) / 2)}\n//       </span>\n//       {error && <>{error?.message}</>}\n//     </>\n//   );\n// }\n// export default ShowData;\nvar _c;\n$RefreshReg$(_c, \"ShowData\");","map":{"version":3,"names":["ShowData","_jsxDEV","_Fragment","children","_c","$RefreshReg$"],"sources":["C:/Great Learning/Labs/LAB ReactJs/expense-tracker/src/Components/ShowData.js"],"sourcesContent":["\r\n\r\nfunction ShowData(){\r\n\r\n  return(\r\n    <>\r\n      This is our Show Data Component.\r\n    </>\r\n  )\r\n  \r\n}\r\n\r\nexport default ShowData;\r\n\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import { getDataFromServer } from \"../services/menu\";\r\n// import ExpenseTracker from \"./ExpenseTracker\";\r\n\r\n// function ShowData() {\r\n//   const [items, setItems] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n//   const [sum, setSum] = useState();\r\n//   const [rahulspent, setRahulspent] = useState(0);\r\n//   const [rameshspent, setRameshspent] = useState(0);\r\n//   const [showform, setShowForm] = useState(false);\r\n\r\n//   var rahulspent1 = 0;\r\n//   var rameshspent1 = 0;\r\n\r\n//   useEffect(() => {\r\n//     const fetchMenu = async () => {\r\n//       try {\r\n//         const data = await getDataFromServer();\r\n//         setItems(data);\r\n//         setSum(data.reduce((result, v) => (result = result + v.price), 0));\r\n//         Shares(data);\r\n//       } catch (error) {\r\n//         setError(error);\r\n//       }\r\n//     };\r\n//     fetchMenu();\r\n//   }, [showform]);\r\n\r\n//   const Shares = (data) => {\r\n//     data.map((sams) =>\r\n//       sams.payeeName === \"Rahul\"\r\n//         ? (rahulspent1 = rahulspent1 + sams.price)\r\n//         : (rameshspent1 = rameshspent1 + sams.price)\r\n//     );\r\n//     setRahulspent(rahulspent1);\r\n//     setRameshspent(rameshspent1);\r\n//   };\r\n\r\n//   const success = () => {\r\n//     setShowForm(false);\r\n//   };\r\n//   const cancel = () => {\r\n//     setShowForm(false);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <header id=\"page-Header\">Expense Tracker</header>\r\n//       <button id=\"Add-Button\" onClick={() => setShowForm(true)}>\r\n//         Add\r\n//       </button>\r\n//       {showform && (\r\n//         <div className=\"form\">\r\n//           <ExpenseTracker onTrue={success} onClose={cancel} />\r\n//         </div>\r\n//       )}\r\n//       <>\r\n//         <div className=\"use-inline date header-color\">Date</div>\r\n//         <div className=\"use-inline header-color\">Product Purchased</div>\r\n//         <div className=\"use-inline price header-color\">Price</div>\r\n//         <div className=\"use-inline header-color\" style={{ width: 112 }}>\r\n//           Payee\r\n//         </div>\r\n//       </>\r\n//       {items &&\r\n//         items.map((user, idx) => (\r\n//           <div key={idx}>\r\n//             <div className=\"use-inline date\">{user.setDate}</div>\r\n//             <div className=\"use-inline\">{user.product}</div>\r\n//             <div className=\"use-inline price\">{user.price}</div>\r\n//             <div className={`use-inline ${user.payeeName}`}>\r\n//               {user.payeeName}\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       <hr />\r\n//       <div className=\"use-inline \">Total: </div>\r\n//       <span className=\"use-inline total\">{sum}</span> <br />\r\n//       <div className=\"use-inline \">Rahul paid: </div>\r\n//       <span className=\"use-inline total Rahul\">{rahulspent}</span> <br />\r\n//       <div className=\"use-inline \">Ramesh paid: </div>\r\n//       <span className=\"use-inline total Ramesh\">{rameshspent.toFixed(2)}</span> <br />\r\n//       <span className=\"use-inline payable\">\r\n//         {rahulspent > rameshspent ? \"Pay Rahul \" : \"Pay Ramesh\"}\r\n//       </span>\r\n//       <span className=\"use-inline payable price\">\r\n//         {\" \"}\r\n//         {Math.abs((rahulspent - rameshspent) / 2)}\r\n//       </span>\r\n//       {error && <>{error?.message}</>}\r\n//     </>\r\n//   );\r\n// }\r\n// export default ShowData;\r\n"],"mappings":";AAEA,SAASA,QAAQA,CAAA,EAAE;EAEjB,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,EAAE;EAEF,gBAAE,CAAC;AAGP;AAACC,EAAA,GARQJ,QAAQ;AAUjB,eAAeA,QAAQ;;AAGvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}