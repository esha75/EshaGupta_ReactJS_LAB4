{"ast":null,"code":"\n// import { useState } from \"react\";\n// import { pushDataToServer } from \"../services/menu\";\n\n// function ExpenseTracker(props) {\n\n//     const [payeeName, setPayeeName] = useState(\"\")\n//     const [product, setProduct] = useState(\"\")\n//     const [price, setPrice] = useState(0)\n//     const [billDate, setBillDate] = useState(\"11-08-2024\")\n\n//     const handlePayeeNameChange = (event) => {\n//         setPayeeName(event.target.value);\n//     }\n//     const handleProductChange = (event) => {\n//         setProduct(event.target.value);\n//     }\n//     const handlePriceChange = (event) => {\n//         setPrice(event.target.value);\n//     }\n//     const handleBillDateChange = (event) => {\n//         setBillDate(event.target.value);\n//     }\n\n//     let submitHandler= async (event) => {\n//         event.preventDefault();\n//         const newExpense = {\n//             payeeName,\n//             product,\n//             price,\n//             billDate\n//         }\n//         const data = await pushDataToServer(newExpense);\n//         console.log(data)\n\n//     }\n\n//     return (\n//         <section>\n//             <header>\n//                 <h1>Add New Item</h1>\n//                 <p>Read the belwo instructions before proceeding:\n//                     <br></br> Make sure you fill all the fields where * is provided\n//                 </p>\n//             </header>\n//             <form onSubmit={submitHandler}>\n//                 <article>\n//                     <p>Name</p>\n//                     <select required value={payeeName} onChange={handlePayeeNameChange}>\n//                     <option value=\"\">Choose</option>\n//                         <option value=\"Rahul\">Rahul</option>\n//                         <option value=\"Ramesh\">Ramesh</option>\n//                     </select>\n//                 </article>\n\n//                 <article>\n//                     <p>Product Purchased</p>\n//                     <input type=\"text\" required value={product} onChange={handleProductChange}></input>\n//                 </article>\n\n//                 <article>\n//                     <p>Price</p>\n//                     <input type=\"number\" required value={price} onChange={handlePriceChange}></input>\n//                 </article>\n\n//                 <article>\n//                     <p>Date</p>\n//                     <input type=\"date\" required value={billDate} onChange={handleBillDateChange}></input>\n//                 </article>\n\n//                 <button className=\"form-button\" type=\"button\" onClick={props.onClose}>Close</button>\n\n//                 <button className=\"form-button\" type=\"submit\">Submit</button>\n\n//             </form>\n\n//         </section>\n//     )\n// }\n\n// export default ExpenseTracker;","map":{"version":3,"names":[],"sources":["C:/Great Learning/Labs/LAB ReactJs/expense-tracker/src/Components/ExpenseTracker.js"],"sourcesContent":["\r\n// import { useState } from \"react\";\r\n// import { pushDataToServer } from \"../services/menu\";\r\n\r\n\r\n// function ExpenseTracker(props) {\r\n\r\n//     const [payeeName, setPayeeName] = useState(\"\")\r\n//     const [product, setProduct] = useState(\"\")\r\n//     const [price, setPrice] = useState(0)\r\n//     const [billDate, setBillDate] = useState(\"11-08-2024\")\r\n\r\n//     const handlePayeeNameChange = (event) => {\r\n//         setPayeeName(event.target.value);\r\n//     }\r\n//     const handleProductChange = (event) => {\r\n//         setProduct(event.target.value);\r\n//     }\r\n//     const handlePriceChange = (event) => {\r\n//         setPrice(event.target.value);\r\n//     }\r\n//     const handleBillDateChange = (event) => {\r\n//         setBillDate(event.target.value);\r\n//     }\r\n\r\n//     let submitHandler= async (event) => {\r\n//         event.preventDefault();\r\n//         const newExpense = {\r\n//             payeeName,\r\n//             product,\r\n//             price,\r\n//             billDate\r\n//         }\r\n//         const data = await pushDataToServer(newExpense);\r\n//         console.log(data)\r\n        \r\n//     }\r\n\r\n//     return (\r\n//         <section>\r\n//             <header>\r\n//                 <h1>Add New Item</h1>\r\n//                 <p>Read the belwo instructions before proceeding:\r\n//                     <br></br> Make sure you fill all the fields where * is provided\r\n//                 </p>\r\n//             </header>\r\n//             <form onSubmit={submitHandler}>\r\n//                 <article>\r\n//                     <p>Name</p>\r\n//                     <select required value={payeeName} onChange={handlePayeeNameChange}>\r\n//                     <option value=\"\">Choose</option>\r\n//                         <option value=\"Rahul\">Rahul</option>\r\n//                         <option value=\"Ramesh\">Ramesh</option>\r\n//                     </select>\r\n//                 </article>\r\n\r\n//                 <article>\r\n//                     <p>Product Purchased</p>\r\n//                     <input type=\"text\" required value={product} onChange={handleProductChange}></input>\r\n//                 </article>\r\n\r\n//                 <article>\r\n//                     <p>Price</p>\r\n//                     <input type=\"number\" required value={price} onChange={handlePriceChange}></input>\r\n//                 </article>\r\n\r\n//                 <article>\r\n//                     <p>Date</p>\r\n//                     <input type=\"date\" required value={billDate} onChange={handleBillDateChange}></input>\r\n//                 </article>\r\n\r\n//                 <button className=\"form-button\" type=\"button\" onClick={props.onClose}>Close</button>\r\n\r\n//                 <button className=\"form-button\" type=\"submit\">Submit</button>\r\n\r\n\r\n//             </form>\r\n\r\n//         </section>\r\n//     )\r\n// }\r\n\r\n// export default ExpenseTracker;"],"mappings":";AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA;;AAEA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}